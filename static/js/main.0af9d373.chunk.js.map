{"version":3,"sources":["routing/AppRoute.enum.ts","providers/AppProviders.tsx","app/login/Login.tsx","app/filters/Filters.enum.ts","app/logo/Logo.enum.ts","app/filters/Filters.tsx","app/product/Product.enum.ts","app/logo/Logo.tsx","app/header/Header.tsx","app/info/Info.enum.ts","app/product/Product.tsx","app/info/Info.tsx","app/products/Products.tsx","app/products/Products.constants.ts","routing/AppRoutes.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["AppRoute","AppContext","createContext","defualtAppContext","description","id","image","name","promo","rating","active","AppProviders","children","useState","products","setProducts","useEffect","axios","get","then","res","data","items","catch","err","console","log","Provider","value","FiltersOptions","Login","to","home","type","LogoName","all","Filters","setFilters","filters","setSearch","setCurrentPage","handleChange","e","target","checked","includes","String","length","filter","item","className","placeholder","onChange","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","FormControlLabel","control","Checkbox","color","label","ProductStatus","logo","Logo","Header","login","Infos","available","unavailable","badge","Product","loaded","setLoaded","productClassess","classNames","renderBadge","src","alt","onLoad","Rating","defaultValue","readOnly","emptyIcon","fontSize","title","subtitle","Info","Products","useContext","currentPage","showProducts","setShowProducts","search","filteredProducts","product","toLowerCase","toLocaleLowerCase","countProducts","lastPage","Math","ceil","pageProducts","slice","buttonPrevClassess","buttonNextClassess","isProduct","map","key","onClick","Pagination","count","page","siblingCount","boundaryCount","hidePrevButton","hideNextButton","event","AppRoutes","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0af9d373.chunk.js","sourcesContent":["export enum AppRoute {\n  home = '/',\n  login = '/login',\n}\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { AppProvidersProps } from \"./AppProviders.types\";\nimport { ProductProps } from \"app/product/Product.types\";\n\nexport const AppContext = createContext<ProductProps[] | null>(null);\n\nconst defualtAppContext: ProductProps[] = [\n  {\n    description:\n      \"Quam soluta et consequuntur velit ipsa sint facere occaecati fugiat.\",\n    id: 1,\n    image: \"https://picsum.photos/640/480?random=4946\",\n    name: \"Awesome Steel Fish\",\n    promo: true,\n    rating: 2,\n    active: true,\n  },\n];\n\nexport const AppProviders = ({ children }: AppProvidersProps) => {\n  const [products, setProducts] = useState<ProductProps[]>(defualtAppContext);\n\n  useEffect(() => {\n    axios\n      .get(`https://join-tsh-api-staging.herokuapp.com/products`)\n      .then((res) => {\n        setProducts(res.data.items);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <AppContext.Provider value={products}>\n      <Router>{children}</Router>\n    </AppContext.Provider>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AppRoute } from 'routing/AppRoute.enum';\n\nexport const Login = () => {\n  return (\n    <>\n      <Link to={AppRoute.home}>Products page</Link>\n      <h2>Login</h2>\n      <form>\n        <div>\n          <label>\n            username:\n            <input name=\"username\" />\n          </label>\n        </div>\n        <div>\n          <label>\n            password:\n            <input name=\"password\" type=\"password\" />\n          </label>\n        </div>\n        <button type=\"submit\">submit</button>\n      </form>\n    </>\n  );\n};\n","export enum FiltersOptions {\n  active = \"active\",\n  promo = \"promo\",\n  all = \"all\",\n}\n","export enum LogoName {\n  logo = \"join.tsh.io\",\n}\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport { FiltersOptions } from \"./Filters.enum\";\nimport { FiltersProps } from \"./Filters.types\";\n\nimport \"./Filters.scss\";\n\nconst { active, promo, all } = FiltersOptions;\n\nexport const Filters = ({\n  setFilters,\n  filters,\n  setSearch,\n  setCurrentPage,\n}: FiltersProps) => {\n  const handleChange = (e: { target: { checked: boolean; name: string } }) => {\n    e.target.checked\n      ? filters.includes(all)\n        ? setFilters([String(e.target.name)])\n        : setFilters([...filters, String(e.target.name)])\n      : filters.length > 1\n      ? setFilters(filters.filter((item) => item !== String(e.target.name)))\n      : setFilters([all]);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"filters\">\n      <div className=\"filters__search\">\n        <input\n          className=\"filters__input\"\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n        />\n        <svg\n          width=\"18\"\n          height=\"18\"\n          viewBox=\"0 0 18 18\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M11.71 11H12.5L17.49 16L16 17.49L11 12.5V11.71L10.73 11.43C9.59 12.41 8.11 13 6.5 13C2.91 13 0 10.09 0 6.5C0 2.91 2.91 0 6.5 0C10.09 0 13 2.91 13 6.5C13 8.11 12.41 9.59 11.43 10.73L11.71 11ZM2 6.5C2 8.99 4.01 11 6.5 11C8.99 11 11 8.99 11 6.5C11 4.01 8.99 2 6.5 2C4.01 2 2 4.01 2 6.5Z\"\n            fill=\"#1A1B1D\"\n          />\n        </svg>\n      </div>\n\n      <div className=\"filters__checkboxes\">\n        <FormControlLabel\n          control={\n            <Checkbox name={active} onChange={handleChange} color=\"primary\" />\n          }\n          label={active}\n        />\n        <FormControlLabel\n          control={\n            <Checkbox name={promo} onChange={handleChange} color=\"primary\" />\n          }\n          label={promo}\n        />\n      </div>\n    </div>\n  );\n};\n","export enum ProductStatus {\n  available = \"Show details\",\n  unavailable = \"Unavailable\",\n  badge = \"Promo\",\n}\n","import React from \"react\";\n\nimport { LogoName } from \"./Logo.enum\";\n\nimport \"./Logo.scss\";\n\nconst { logo } = LogoName;\n\nexport const Logo = () => <div className=\"logo\">{logo}</div>;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Filters } from \"app/filters/Filters\";\nimport { Logo } from \"app/logo/Logo\";\n\nimport { AppRoute } from \"routing/AppRoute.enum\";\nimport { HeaderProps } from \"./Header.types\";\n\nimport \"./Header.scss\";\n\nexport const Header = ({\n  setFilters,\n  filters,\n  setSearch,\n  setCurrentPage,\n}: HeaderProps) => (\n  <div className=\"header\">\n    <div className=\"header__container\">\n      <Logo />\n      <Filters\n        setFilters={setFilters}\n        filters={filters}\n        setSearch={setSearch}\n        setCurrentPage={setCurrentPage}\n      />\n      <Link to={AppRoute.login} className=\"header__login\">\n        Log in\n      </Link>\n    </div>\n  </div>\n);\n","export enum Infos {\n  title = \"Ooops... It's empty here\",\n  subtitle = \"There are no products on the list\",\n}\n","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\n\nimport { ProductProps } from \"./Product.types\";\nimport { ProductStatus } from \"./Product.enum\";\n\nimport \"./Product.scss\";\n\nconst { available, unavailable, badge } = ProductStatus;\n\nexport const Product = ({\n  name,\n  description,\n  rating,\n  image,\n  active,\n  promo,\n}: ProductProps) => {\n  const [loaded, setLoaded] = useState<boolean>(false);\n\n  const productClassess: string = classNames(\"product\", {\n    \"product--disactive\": !active,\n    \"product--show\": loaded,\n  });\n\n  const renderBadge: JSX.Element | null = promo ? (\n    <div className=\"product__badge\">{badge}</div>\n  ) : null;\n\n  return (\n    <div className={productClassess}>\n      {renderBadge}\n      {loaded ? null : <div className=\"product__loader\" />}\n      <img\n        className=\"product__image\"\n        src={image}\n        alt={name}\n        onLoad={() => setLoaded(true)}\n      />\n      <div className=\"product__container\">\n        <h2 className=\"product__name\">{name}</h2>\n        <p className=\"product__description\">{description}</p>\n        <div className=\"product__ratings\">\n          <Rating\n            defaultValue={rating}\n            readOnly\n            emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\n          />\n        </div>\n        <button className=\"product__button\">\n          {active ? available : unavailable}\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Infos } from \"./Info.enum\";\n\nimport \"./Info.scss\";\n\nconst { title, subtitle } = Infos;\n\nexport const Info = () => (\n  <div className=\"info\">\n    <div className=\"info__container\">\n      <div className=\"info__icon\">\n        <svg\n          width=\"38\"\n          height=\"48\"\n          viewBox=\"0 0 38 48\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M18.7448 0.525729C14.5074 0.650657 11.0485 3.87686 10.558 8.02097L4 8.02197C1.79086 8.02197 0 9.81283 0 12.022V43.522C0 45.7311 1.79086 47.522 4 47.522H34C36.2091 47.522 38 45.7311 38 43.522V12.022L37.9951 11.8223C37.8911 9.70594 36.1422 8.02197 34 8.02197L27.441 8.02097C26.9418 3.79414 23.353 0.521973 19 0.521973L18.7448 0.525729ZM19 2.52197C22.5899 2.52197 25.5 5.43212 25.5 9.02197C25.5 9.57426 25.9477 10.022 26.5 10.022H34C35.1046 10.022 36 10.9174 36 12.022V43.522C36 44.6265 35.1046 45.522 34 45.522H4C2.89543 45.522 2 44.6265 2 43.522V12.022C2 10.9174 2.89543 10.022 4 10.022H11.5C12.0523 10.022 12.5 9.57426 12.5 9.02197C12.5 5.43212 15.4101 2.52197 19 2.52197ZM19.1435 6.52777L19 6.52197L18.8565 6.52777C17.9571 6.60078 17.25 7.3538 17.25 8.27197C17.25 9.23847 18.0335 10.022 19 10.022C19.9665 10.022 20.75 9.23847 20.75 8.27197C20.75 7.3538 20.0429 6.60078 19.1435 6.52777Z\"\n            fill=\"#B9BDCF\"\n          />\n        </svg>\n      </div>\n      <h1 className=\"info__title\">{title}</h1>\n      <h2 className=\"info__subtitle\">{subtitle}</h2>\n    </div>\n  </div>\n);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { AppContext } from \"../../providers/AppProviders\";\nimport { Header } from \"app/header/Header\";\nimport { Product } from \"../product/Product\";\nimport { Info } from \"../info/Info\";\n\nimport { FiltersOptions } from \"app/filters/Filters.enum\";\nimport { ProductProps } from \"app/product/Product.types\";\nimport { PRODUCTS_PER_PAGE, DEFUALT_PAGE } from \"./Products.constants\";\n\nimport \"./Products.scss\";\n\nconst { active, promo, all } = FiltersOptions;\n\nexport const Products = () => {\n  const products = useContext<ProductProps[] | null>(AppContext);\n  const [filters, setFilters] = useState<string[]>([all]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [showProducts, setShowProducts] = useState<ProductProps[] | null>(\n    products\n  );\n  const [search, setSearch] = useState<string>(\"\");\n\n  useEffect(() => setShowProducts(products), [products]);\n\n  const filteredProducts: ProductProps[] = showProducts!\n    .filter(\n      (product) =>\n        search === \"\" ||\n        product.name.toLowerCase().includes(search.toLocaleLowerCase())\n    )\n    .filter(\n      (product) =>\n        (product.active && filters.includes(active)) ||\n        (product.promo && filters.includes(promo)) ||\n        filters.includes(all)\n    );\n\n  const countProducts: number = filteredProducts.length;\n  const lastPage: number = Math.ceil(countProducts / PRODUCTS_PER_PAGE);\n\n  const pageProducts: ProductProps[] = filteredProducts.slice(\n    currentPage === 1 ? 0 : (currentPage - 1) * PRODUCTS_PER_PAGE,\n    PRODUCTS_PER_PAGE * currentPage\n  );\n\n  const buttonPrevClassess: string = classNames(\"products__button\", {\n    \"products__button--disabled\": currentPage === DEFUALT_PAGE,\n  });\n\n  const buttonNextClassess: string = classNames(\"products__button\", {\n    \"products__button--disabled\": currentPage === lastPage,\n  });\n\n  const isProduct: boolean = pageProducts.length !== 0;\n\n  const renderProducts: () => JSX.Element = () =>\n    isProduct ? (\n      <div className=\"products__container\">\n        {pageProducts.map((product) => {\n          const { id, name, description, rating, image, active, promo } =\n            product;\n          return (\n            <Product\n              name={name}\n              description={description}\n              rating={rating}\n              image={image}\n              active={active}\n              promo={promo}\n              id={id}\n              key={id}\n            />\n          );\n        })}\n      </div>\n    ) : (\n      <Info />\n    );\n\n  const renderPagination: () => JSX.Element | null = () =>\n    isProduct ? (\n      <div className=\"products__pagination\">\n        <button\n          className={buttonPrevClassess}\n          onClick={() => setCurrentPage(DEFUALT_PAGE)}\n        >\n          First\n        </button>\n        <Pagination\n          count={lastPage}\n          page={currentPage}\n          siblingCount={currentPage > 2 ? 1 : 0}\n          boundaryCount={lastPage > 6 ? 1 : 2}\n          hidePrevButton\n          hideNextButton\n          onChange={(event, value) => {\n            setCurrentPage(value);\n          }}\n        />\n        <button\n          className={buttonNextClassess}\n          onClick={() => setCurrentPage(lastPage)}\n        >\n          Last\n        </button>\n      </div>\n    ) : null;\n\n  return (\n    <>\n      <div className=\"products\">\n        <Header\n          setFilters={setFilters}\n          filters={filters}\n          setSearch={setSearch}\n          setCurrentPage={setCurrentPage}\n        />\n        {renderProducts()}\n        {renderPagination()}\n      </div>\n    </>\n  );\n};\n","export const PRODUCTS_PER_PAGE = 8;\nexport const DEFUALT_PAGE = 1;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { Login } from \"app/login/Login\";\nimport { Products } from \"app/products/Products\";\n\nimport { AppRoute } from \"./AppRoute.enum\";\n\nexport const AppRoutes = () => {\n  return (\n    <Switch>\n      <Route path={AppRoute.home} exact component={Products} />\n      <Route path={AppRoute.login} component={Login} />\n      <Redirect to={AppRoute.home} />\n    </Switch>\n  );\n};\n","import React from \"react\";\n\nimport { AppRoutes } from \"routing/AppRoutes\";\n\nimport \"../styles/main.scss\";\n\nexport const App = () => {\n  return <AppRoutes />;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { AppProviders } from 'providers/AppProviders';\n\nimport { App } from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <AppProviders>\n    <App />\n  </AppProviders>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}