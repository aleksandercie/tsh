{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandergasior/Documents/tsh/react-interview-starter-ts/src/app/products/Products.tsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { Pagination } from \"antd\";\nimport { AppRoute } from \"routing/AppRoute.enum\";\nimport { AppContext } from \"../../providers/AppProviders\";\nimport { Header } from \"app/header/Header\";\nimport { Product } from \"../product/Product\";\nimport \"antd/dist/antd.css\";\nimport \"./Products.scss\";\nexport const Products = () => {\n  const products = useContext(AppContext);\n  const [filters, setFilters] = useState([\"all\"]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showProducts, setShowProducts] = useState(products);\n  useEffect(() => setShowProducts(products), [products]);\n  const countProducts = showProducts.length;\n  const filteredProducts = showProducts.filter(product => {\n    if (product[\"active\"] && filters.includes(\"active\")) {\n      return product;\n    }\n\n    if (product[\"promo\"] && filters.includes(\"promo\")) {\n      return product;\n    }\n\n    if (filters.includes(\"all\")) {\n      return product;\n    }\n  });\n  const pageProducts = filteredProducts.slice(currentPage === 1 ? 0 : (currentPage - 1) * 4, 4 * currentPage);\n\n  const renderProducts = () => {\n    if (!pageProducts) return null;\n    return pageProducts.map(product => {\n      const {\n        id\n      } = product;\n      return /*#__PURE__*/React.createElement(Product, {\n        product: product,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      });\n    });\n  };\n\n  const buttonPrevClassess = classNames(\"products__button\", {\n    \"products__button--disabled\": currentPage === 1\n  });\n  const buttonNextClassess = classNames(\"products__button\", {\n    \"products__button--disabled\": currentPage === countProducts\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    setFilters: setFilters,\n    filters: filters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, renderProducts()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products__pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonPrevClassess,\n    onClick: () => setCurrentPage(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"First\"), /*#__PURE__*/React.createElement(Pagination, {\n    current: currentPage,\n    defaultPageSize: 4,\n    total: countProducts,\n    onChange: page => {\n      setCurrentPage(page);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonNextClassess,\n    onClick: () => setCurrentPage(countProducts),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Last\"))), /*#__PURE__*/React.createElement(Link, {\n    to: AppRoute.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \" Login \"));\n};","map":{"version":3,"sources":["/Users/aleksandergasior/Documents/tsh/react-interview-starter-ts/src/app/products/Products.tsx"],"names":["React","useContext","useEffect","useState","Link","classNames","Pagination","AppRoute","AppContext","Header","Product","Products","products","filters","setFilters","currentPage","setCurrentPage","showProducts","setShowProducts","countProducts","length","filteredProducts","filter","product","includes","pageProducts","slice","renderProducts","map","id","buttonPrevClassess","buttonNextClassess","page","login"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { Pagination } from \"antd\";\nimport { AppRoute } from \"routing/AppRoute.enum\";\nimport { AppContext } from \"../../providers/AppProviders\";\nimport { Header } from \"app/header/Header\";\nimport { Product } from \"../product/Product\";\nimport \"antd/dist/antd.css\";\nimport \"./Products.scss\";\n\nexport const Products = () => {\n  const products = useContext(AppContext);\n  const [filters, setFilters] = useState<string[]>([\"all\"]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showProducts, setShowProducts] = useState(products);\n\n  useEffect(() => setShowProducts(products), [products]);\n\n  const countProducts = showProducts.length;\n\n  const filteredProducts = showProducts.filter((product) => {\n    if (product[\"active\"] && filters.includes(\"active\")) {\n      return product;\n    }\n    if (product[\"promo\"] && filters.includes(\"promo\")) {\n      return product;\n    }\n    if (filters.includes(\"all\")) {\n      return product;\n    }\n  });\n\n  const pageProducts = filteredProducts.slice(\n    currentPage === 1 ? 0 : (currentPage - 1) * 4,\n    4 * currentPage\n  );\n\n  const renderProducts = () => {\n    if (!pageProducts) return null;\n\n    return pageProducts.map((product) => {\n      const { id } = product;\n      return <Product product={product} key={id} />;\n    });\n  };\n\n  const buttonPrevClassess = classNames(\"products__button\", {\n    \"products__button--disabled\": currentPage === 1,\n  });\n\n  const buttonNextClassess = classNames(\"products__button\", {\n    \"products__button--disabled\": currentPage === countProducts,\n  });\n\n  return (\n    <>\n      <div className=\"products\">\n        <Header setFilters={setFilters} filters={filters} />\n        <div className=\"products__container\">{renderProducts()}</div>\n\n        <div className=\"products__pagination\">\n          <button\n            className={buttonPrevClassess}\n            onClick={() => setCurrentPage(1)}\n          >\n            First\n          </button>\n          <Pagination\n            current={currentPage}\n            defaultPageSize={4}\n            total={countProducts}\n            onChange={(page) => {\n              setCurrentPage(page);\n            }}\n          />\n          <button\n            className={buttonNextClassess}\n            onClick={() => setCurrentPage(countProducts)}\n          >\n            Last\n          </button>\n        </div>\n      </div>\n\n      <Link to={AppRoute.login}> Login </Link>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}