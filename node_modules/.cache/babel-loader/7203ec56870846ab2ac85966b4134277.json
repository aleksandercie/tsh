{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandergasior/Documents/tsh/react-interview-starter-ts/src/app/filters/Filters.tsx\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Checkbox } from \"antd\";\nimport { FiltersOptions } from \"./Filters.enum\";\nimport \"./Filters.scss\";\nconst {\n  active,\n  promo,\n  all\n} = FiltersOptions;\nexport const Filters = ({\n  setFilters,\n  filters,\n  setSearch\n}) => {\n  const handleChange = e => {\n    e.target.checked ? filters.includes(all) ? setFilters([String(e.target.name)]) : setFilters([...filters, String(e.target.name)]) : filters.length > 1 ? setFilters(filters.filter(item => item !== String(e.target.name))) : setFilters([all]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search...\",\n    onChange: e => {\n      setSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    name: active,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, active), /*#__PURE__*/React.createElement(Checkbox, {\n    name: promo,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, promo));\n};","map":{"version":3,"sources":["/Users/aleksandergasior/Documents/tsh/react-interview-starter-ts/src/app/filters/Filters.tsx"],"names":["React","Checkbox","FiltersOptions","active","promo","all","Filters","setFilters","filters","setSearch","handleChange","e","target","checked","includes","String","name","length","filter","item","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAGA,OAAO,gBAAP;AAGA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,IAAyBH,cAA/B;AAEA,OAAO,MAAMI,OAAO,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA;AAAvB,CAAD,KAAsD;AAC3E,QAAMC,YAAY,GAAIC,CAAD,IAA4B;AAC/CA,IAAAA,CAAC,CAACC,MAAF,CAASC,OAAT,GACIL,OAAO,CAACM,QAAR,CAAiBT,GAAjB,IACEE,UAAU,CAAC,CAACQ,MAAM,CAACJ,CAAC,CAACC,MAAF,CAASI,IAAV,CAAP,CAAD,CADZ,GAEET,UAAU,CAAC,CAAC,GAAGC,OAAJ,EAAaO,MAAM,CAACJ,CAAC,CAACC,MAAF,CAASI,IAAV,CAAnB,CAAD,CAHhB,GAIIR,OAAO,CAACS,MAAR,GAAiB,CAAjB,GACAV,UAAU,CAACC,OAAO,CAACU,MAAR,CAAgBC,IAAD,IAAUA,IAAI,KAAKJ,MAAM,CAACJ,CAAC,CAACC,MAAF,CAASI,IAAV,CAAxC,CAAD,CADV,GAEAT,UAAU,CAAC,CAACF,GAAD,CAAD,CANd;AAOD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,QAAQ,EAAGM,CAAD,IAAO;AACfF,MAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASQ,KAAV,CAAT;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEjB,MAAhB;AAAwB,IAAA,QAAQ,EAAEO,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MADH,CARF,eAWE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,KAAhB;AAAuB,IAAA,QAAQ,EAAEM,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KADH,CAXF,CADF;AAiBD,CA5BM","sourcesContent":["import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Checkbox } from \"antd\";\nimport { FiltersOptions } from \"./Filters.enum\";\nimport { FiltersProps } from \"./Filters.types\";\n\nimport \"./Filters.scss\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\n\nconst { active, promo, all } = FiltersOptions;\n\nexport const Filters = ({ setFilters, filters, setSearch }: FiltersProps) => {\n  const handleChange = (e: CheckboxChangeEvent) => {\n    e.target.checked\n      ? filters.includes(all)\n        ? setFilters([String(e.target.name)])\n        : setFilters([...filters, String(e.target.name)])\n      : filters.length > 1\n      ? setFilters(filters.filter((item) => item !== String(e.target.name)))\n      : setFilters([all]);\n  };\n\n  return (\n    <div className=\"filters\">\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        onChange={(e) => {\n          setSearch(e.target.value);\n        }}\n      />\n      <Checkbox name={active} onChange={handleChange}>\n        {active}\n      </Checkbox>\n      <Checkbox name={promo} onChange={handleChange}>\n        {promo}\n      </Checkbox>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}