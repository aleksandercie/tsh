{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandergasior/Documents/tsh/react-interview-starter-ts/src/app/filters/Filters.tsx\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Checkbox } from \"antd\";\nimport { FiltersOptions } from \"./Filters.enum\";\nimport \"./Filters.scss\";\nconst {\n  active,\n  promo\n} = FiltersOptions;\nexport const Filters = ({\n  setFilters,\n  filters\n}) => {\n  const handleChange = e => {\n    if (filters.includes(String(e.target.name))) {\n      setFilters([String(e.target.name)]);\n    } else {\n      setFilters([...filters, String(e.target.name)]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: active,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, active), /*#__PURE__*/React.createElement(Checkbox, {\n    name: promo,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, promo));\n};","map":{"version":3,"sources":["/Users/aleksandergasior/Documents/tsh/react-interview-starter-ts/src/app/filters/Filters.tsx"],"names":["React","Checkbox","FiltersOptions","active","promo","Filters","setFilters","filters","handleChange","e","includes","String","target","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAGA,OAAO,gBAAP;AAGA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAoBF,cAA1B;AAEA,OAAO,MAAMG,OAAO,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA2C;AAChE,QAAMC,YAAY,GAAIC,CAAD,IAA4B;AAC/C,QAAIF,OAAO,CAACG,QAAR,CAAiBC,MAAM,CAACF,CAAC,CAACG,MAAF,CAASC,IAAV,CAAvB,CAAJ,EAA6C;AAC3CP,MAAAA,UAAU,CAAC,CAACK,MAAM,CAACF,CAAC,CAACG,MAAF,CAASC,IAAV,CAAP,CAAD,CAAV;AACD,KAFD,MAEO;AACLP,MAAAA,UAAU,CAAC,CAAC,GAAGC,OAAJ,EAAaI,MAAM,CAACF,CAAC,CAACG,MAAF,CAASC,IAAV,CAAnB,CAAD,CAAV;AACD;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEV,MAAhB;AAAwB,IAAA,QAAQ,EAAEK,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MADH,CADF,eAIE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,KAAhB;AAAuB,IAAA,QAAQ,EAAEI,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KADH,CAJF,CADF;AAUD,CAnBM","sourcesContent":["import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Checkbox } from \"antd\";\nimport { FiltersOptions } from \"./Filters.enum\";\nimport { FiltersProps } from \"./Filters.types\";\n\nimport \"./Filters.scss\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\n\nconst { active, promo } = FiltersOptions;\n\nexport const Filters = ({ setFilters, filters }: FiltersProps) => {\n  const handleChange = (e: CheckboxChangeEvent) => {\n    if (filters.includes(String(e.target.name))) {\n      setFilters([String(e.target.name)]);\n    } else {\n      setFilters([...filters, String(e.target.name)]);\n    }\n  };\n\n  return (\n    <div className=\"filters\">\n      <Checkbox name={active} onChange={handleChange}>\n        {active}\n      </Checkbox>\n      <Checkbox name={promo} onChange={handleChange}>\n        {promo}\n      </Checkbox>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}