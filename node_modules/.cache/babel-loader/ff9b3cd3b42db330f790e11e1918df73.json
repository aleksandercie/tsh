{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandergasior/Documents/tsh/react-interview-starter-ts/src/app/products/Products.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { List } from \"antd\";\nimport { AppRoute } from \"routing/AppRoute.enum\";\nimport { AppContext } from \"../../providers/AppProviders\";\nimport { Product } from \"../product/Product\";\nimport \"./Products.scss\";\nimport { Header } from \"app/header/Header\";\n\nfunction itemRender(current, type, originalElement) {\n  if (type === \"prev\") {\n    // eslint-disable-next-line\n    return /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    }, \"Previous\");\n  }\n\n  if (type === \"next\") {\n    // eslint-disable-next-line\n    return /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, \"Next\");\n  }\n\n  return originalElement;\n}\n\nexport const Products = () => {\n  const products = useContext(AppContext);\n  const [filters, setFilters] = useState([\"all\"]);\n  const [activeProducts, setActiveProducts] = useState([]);\n  console.log(filters);\n  console.log(products);\n\n  const renderProducts = () => {\n    if (!products) return null;\n    const filteredProducts = products.filter(product => {\n      if (product[\"active\"] && filters.includes(\"active\")) {\n        return product;\n      }\n\n      if (product[\"promo\"] && filters.includes(\"promo\")) {\n        return product;\n      }\n\n      if (filters.includes(\"all\")) {\n        return product;\n      }\n    });\n    setActiveProducts(filteredProducts);\n    return /*#__PURE__*/React.createElement(List, {\n      grid: {\n        gutter: 24,\n        xs: 1,\n        sm: 1,\n        md: 2,\n        lg: 2,\n        xl: 4,\n        xxl: 4\n      },\n      pagination: {\n        pageSize: 4,\n        itemRender: itemRender\n      },\n      dataSource: activeProducts,\n      renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Product, {\n        product: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    setFilters: setFilters,\n    filters: filters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, renderProducts())), /*#__PURE__*/React.createElement(Link, {\n    to: AppRoute.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \" Login \"));\n};","map":{"version":3,"sources":["/Users/aleksandergasior/Documents/tsh/react-interview-starter-ts/src/app/products/Products.tsx"],"names":["React","useContext","useState","Link","List","AppRoute","AppContext","Product","Header","itemRender","current","type","originalElement","Products","products","filters","setFilters","activeProducts","setActiveProducts","console","log","renderProducts","filteredProducts","filter","product","includes","gutter","xs","sm","md","lg","xl","xxl","pageSize","item","login"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { List } from \"antd\";\nimport { AppRoute } from \"routing/AppRoute.enum\";\nimport { AppContext } from \"../../providers/AppProviders\";\nimport { Product } from \"../product/Product\";\nimport \"./Products.scss\";\nimport { Header } from \"app/header/Header\";\n\nfunction itemRender(current: any, type: string, originalElement: any) {\n  if (type === \"prev\") {\n    // eslint-disable-next-line\n    return <a>Previous</a>;\n  }\n  if (type === \"next\") {\n    // eslint-disable-next-line\n    return <a>Next</a>;\n  }\n  return originalElement;\n}\n\nexport const Products = () => {\n  const products = useContext(AppContext);\n  const [filters, setFilters] = useState<string[]>([\"all\"]);\n  const [activeProducts, setActiveProducts] = useState([]);\n  console.log(filters);\n  console.log(products);\n\n  const renderProducts = () => {\n    if (!products) return null;\n\n    const filteredProducts = products.filter((product) => {\n      if (product[\"active\"] && filters.includes(\"active\")) {\n        return product;\n      }\n      if (product[\"promo\"] && filters.includes(\"promo\")) {\n        return product;\n      }\n      if (filters.includes(\"all\")) {\n        return product;\n      }\n    });\n\n    setActiveProducts(filteredProducts);\n\n    return (\n      <List\n        grid={{\n          gutter: 24,\n          xs: 1,\n          sm: 1,\n          md: 2,\n          lg: 2,\n          xl: 4,\n          xxl: 4,\n        }}\n        pagination={{\n          pageSize: 4,\n          itemRender: itemRender,\n        }}\n        dataSource={activeProducts}\n        renderItem={(item) => (\n          <List.Item>\n            <Product product={item} />\n          </List.Item>\n        )}\n      />\n    );\n  };\n\n  return (\n    <>\n      <div className=\"products\">\n        <Header setFilters={setFilters} filters={filters} />\n        <div className=\"products__container\">{renderProducts()}</div>\n      </div>\n\n      <Link to={AppRoute.login}> Login </Link>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}